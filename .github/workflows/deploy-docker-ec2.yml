# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - develop

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       # 前端缓存
#       - name: Cache Node.js modules for frontend
#         uses: actions/cache@v2
#         with:
#           path: ~/.npm
#           key: ${{ runner.OS }}-node-${{ hashFiles('./client/package-lock.json') }}-${{ github.head_ref }}
#           restore-keys: |
#             ${{ runner.OS }}-node-${{ hashFiles('./client/package-lock.json') }}-
#             ${{ runner.OS }}-node-

#       # 后端缓存
#       - name: Cache Node.js modules for backend
#         uses: actions/cache@v2
#         with:
#           path: ~/.npm
#           key: ${{ runner.OS }}-node-${{ hashFiles('./server/package-lock.json') }}-${{ github.head_ref }}
#           restore-keys: |
#             ${{ runner.OS }}-node-${{ hashFiles('./server/package-lock.json') }}-
#             ${{ runner.OS }}-node-

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and Push Docker image for Frontend
#         uses: docker/build-push-action@v2
#         with:
#           context: ./client # path to your frontend code
#           file: ./client/Dockerfile
#           push: true
#           tags: boyuan0926/frontend:latest # replace with your Docker Hub username and repository name
#           platforms: linux/amd64,linux/arm64 # building the image for both amd64 and arm64 architectures

#       - name: Build and Push Docker image for Backend
#         uses: docker/build-push-action@v2
#         with:
#           context: ./server # path to your backend code
#           file: ./server/Dockerfile
#           push: true
#           tags: boyuan0926/backend:latest # replace with your Docker Hub username and repository name
#           platforms: linux/amd64,linux/arm64 # building the image for both amd64 and arm64 architectures

#   deploy:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#     - name: Executing remote SSH commands to deploy
#       uses: appleboy/ssh-action@v0.1.4
#       with:
#         debug: true
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         script: |
#           cd my_docker_project
#           docker-compose down
#           docker-compose pull
#           docker-compose up -d


name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.4.4

      # 使用Docker Compose構建Docker映像
      - name: Build Docker images
        run: |
          docker-compose -f "${{ github.workspace }}/docker-compose.yml" up --build
          docker-compose -f "${{ github.workspace }}/docker-compose.yml" push
        working-directory: "${{ github.workspace }}" # 替換成你的項目路徑

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Executing remote SSH commands to deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        debug: true
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd my_docker_project
          docker-compose pull
          docker-compose up -d