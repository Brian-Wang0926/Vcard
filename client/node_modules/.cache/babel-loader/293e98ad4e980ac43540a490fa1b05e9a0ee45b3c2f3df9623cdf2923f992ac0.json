{"ast":null,"code":"import { repeat } from './tool';\n// 最简单的Decorator，即在现有文字的基础上加上前缀、后缀即可\nvar SIMPLE_DECORATOR = {\n  bold: ['**', '**'],\n  italic: ['*', '*'],\n  underline: ['++', '++'],\n  strikethrough: ['~~', '~~'],\n  quote: ['\\n> ', '\\n'],\n  inlinecode: ['`', '`'],\n  code: ['\\n```\\n', '\\n```\\n']\n}; // 插入H1-H6\n\nfor (var i = 1; i <= 6; i++) {\n  SIMPLE_DECORATOR[\"h\" + i] = [\"\\n\" + repeat('#', i) + \" \", '\\n'];\n}\nfunction decorateTableText(option) {\n  var _option$row = option.row,\n    row = _option$row === void 0 ? 2 : _option$row,\n    _option$col = option.col,\n    col = _option$col === void 0 ? 2 : _option$col;\n  var rowHeader = ['|'];\n  var rowData = ['|'];\n  var rowDivision = ['|'];\n  var colStr = '';\n  for (var _i = 1; _i <= col; _i++) {\n    rowHeader.push(' Head |');\n    rowDivision.push(' --- |');\n    rowData.push(' Data |');\n  }\n  for (var j = 1; j <= row; j++) {\n    colStr += '\\n' + rowData.join('');\n  }\n  return rowHeader.join('') + \"\\n\" + rowDivision.join('') + colStr;\n}\nfunction decorateList(type, target) {\n  var text = target;\n  if (text.substr(0, 1) !== '\\n') {\n    text = '\\n' + text;\n  }\n  if (type === 'unordered') {\n    return text.length > 1 ? text.replace(/\\n/g, '\\n* ').trim() : '* ';\n  } else {\n    var count = 1;\n    if (text.length > 1) {\n      return text.replace(/\\n/g, function () {\n        return \"\\n\" + count++ + \". \";\n      }).trim();\n    } else {\n      return '1. ';\n    }\n  }\n}\nfunction createTextDecorated(text, newBlock) {\n  return {\n    text: text,\n    newBlock: newBlock,\n    selection: {\n      start: text.length,\n      end: text.length\n    }\n  };\n}\n/**\n * 获取装饰后的Markdown文本\n * @param target 原文字\n * @param type 装饰类型\n * @param option 附加参数\n * @returns {Decorated}\n */\n\nfunction getDecorated(target, type, option) {\n  if (typeof SIMPLE_DECORATOR[type] !== 'undefined') {\n    return {\n      text: \"\" + SIMPLE_DECORATOR[type][0] + target + SIMPLE_DECORATOR[type][1],\n      selection: {\n        start: SIMPLE_DECORATOR[type][0].length,\n        end: SIMPLE_DECORATOR[type][0].length + target.length\n      }\n    };\n  }\n  switch (type) {\n    case 'tab':\n      var inputValue = option.tabMapValue === 1 ? '\\t' : ' '.repeat(option.tabMapValue);\n      var newSelectedText = inputValue + target.replace(/\\n/g, \"\\n\" + inputValue);\n      var lineBreakCount = target.includes('\\n') ? target.match(/\\n/g).length : 0;\n      return {\n        text: newSelectedText,\n        selection: {\n          start: option.tabMapValue,\n          end: option.tabMapValue * (lineBreakCount + 1) + target.length\n        }\n      };\n    case 'unordered':\n      return createTextDecorated(decorateList('unordered', target), true);\n    case 'order':\n      return createTextDecorated(decorateList('order', target), true);\n    case 'hr':\n      return createTextDecorated('---', true);\n    case 'table':\n      return {\n        text: decorateTableText(option),\n        newBlock: true\n      };\n    case 'image':\n      return {\n        text: \"![\" + (target || option.target) + \"](\" + (option.imageUrl || '') + \")\",\n        selection: {\n          start: 2,\n          end: target.length + 2\n        }\n      };\n    case 'link':\n      return {\n        text: \"[\" + target + \"](\" + (option.linkUrl || '') + \")\",\n        selection: {\n          start: 1,\n          end: target.length + 1\n        }\n      };\n  }\n  return {\n    text: target,\n    selection: {\n      start: 0,\n      end: target.length\n    }\n  };\n}\nexport default getDecorated;","map":{"version":3,"names":["repeat","SIMPLE_DECORATOR","bold","italic","underline","strikethrough","quote","inlinecode","code","i","decorateTableText","option","_option$row","row","_option$col","col","rowHeader","rowData","rowDivision","colStr","_i","push","j","join","decorateList","type","target","text","substr","length","replace","trim","count","createTextDecorated","newBlock","selection","start","end","getDecorated","inputValue","tabMapValue","newSelectedText","lineBreakCount","includes","match","imageUrl","linkUrl"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/node_modules/react-markdown-editor-lite/esm/utils/decorate.js"],"sourcesContent":["import { repeat } from './tool';\n// 最简单的Decorator，即在现有文字的基础上加上前缀、后缀即可\nvar SIMPLE_DECORATOR = {\n  bold: ['**', '**'],\n  italic: ['*', '*'],\n  underline: ['++', '++'],\n  strikethrough: ['~~', '~~'],\n  quote: ['\\n> ', '\\n'],\n  inlinecode: ['`', '`'],\n  code: ['\\n```\\n', '\\n```\\n']\n}; // 插入H1-H6\n\nfor (var i = 1; i <= 6; i++) {\n  SIMPLE_DECORATOR[\"h\" + i] = [\"\\n\" + repeat('#', i) + \" \", '\\n'];\n}\n\nfunction decorateTableText(option) {\n  var _option$row = option.row,\n      row = _option$row === void 0 ? 2 : _option$row,\n      _option$col = option.col,\n      col = _option$col === void 0 ? 2 : _option$col;\n  var rowHeader = ['|'];\n  var rowData = ['|'];\n  var rowDivision = ['|'];\n  var colStr = '';\n\n  for (var _i = 1; _i <= col; _i++) {\n    rowHeader.push(' Head |');\n    rowDivision.push(' --- |');\n    rowData.push(' Data |');\n  }\n\n  for (var j = 1; j <= row; j++) {\n    colStr += '\\n' + rowData.join('');\n  }\n\n  return rowHeader.join('') + \"\\n\" + rowDivision.join('') + colStr;\n}\n\nfunction decorateList(type, target) {\n  var text = target;\n\n  if (text.substr(0, 1) !== '\\n') {\n    text = '\\n' + text;\n  }\n\n  if (type === 'unordered') {\n    return text.length > 1 ? text.replace(/\\n/g, '\\n* ').trim() : '* ';\n  } else {\n    var count = 1;\n\n    if (text.length > 1) {\n      return text.replace(/\\n/g, function () {\n        return \"\\n\" + count++ + \". \";\n      }).trim();\n    } else {\n      return '1. ';\n    }\n  }\n}\n\nfunction createTextDecorated(text, newBlock) {\n  return {\n    text: text,\n    newBlock: newBlock,\n    selection: {\n      start: text.length,\n      end: text.length\n    }\n  };\n}\n/**\n * 获取装饰后的Markdown文本\n * @param target 原文字\n * @param type 装饰类型\n * @param option 附加参数\n * @returns {Decorated}\n */\n\n\nfunction getDecorated(target, type, option) {\n  if (typeof SIMPLE_DECORATOR[type] !== 'undefined') {\n    return {\n      text: \"\" + SIMPLE_DECORATOR[type][0] + target + SIMPLE_DECORATOR[type][1],\n      selection: {\n        start: SIMPLE_DECORATOR[type][0].length,\n        end: SIMPLE_DECORATOR[type][0].length + target.length\n      }\n    };\n  }\n\n  switch (type) {\n    case 'tab':\n      var inputValue = option.tabMapValue === 1 ? '\\t' : ' '.repeat(option.tabMapValue);\n      var newSelectedText = inputValue + target.replace(/\\n/g, \"\\n\" + inputValue);\n      var lineBreakCount = target.includes('\\n') ? target.match(/\\n/g).length : 0;\n      return {\n        text: newSelectedText,\n        selection: {\n          start: option.tabMapValue,\n          end: option.tabMapValue * (lineBreakCount + 1) + target.length\n        }\n      };\n\n    case 'unordered':\n      return createTextDecorated(decorateList('unordered', target), true);\n\n    case 'order':\n      return createTextDecorated(decorateList('order', target), true);\n\n    case 'hr':\n      return createTextDecorated('---', true);\n\n    case 'table':\n      return {\n        text: decorateTableText(option),\n        newBlock: true\n      };\n\n    case 'image':\n      return {\n        text: \"![\" + (target || option.target) + \"](\" + (option.imageUrl || '') + \")\",\n        selection: {\n          start: 2,\n          end: target.length + 2\n        }\n      };\n\n    case 'link':\n      return {\n        text: \"[\" + target + \"](\" + (option.linkUrl || '') + \")\",\n        selection: {\n          start: 1,\n          end: target.length + 1\n        }\n      };\n  }\n\n  return {\n    text: target,\n    selection: {\n      start: 0,\n      end: target.length\n    }\n  };\n}\n\nexport default getDecorated;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B;AACA,IAAIC,gBAAgB,GAAG;EACrBC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAClBC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAClBC,SAAS,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACvBC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAC3BC,KAAK,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;EACrBC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACtBC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS;AAC7B,CAAC,CAAC,CAAC;;AAEH,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;EAC3BR,gBAAgB,CAAC,GAAG,GAAGQ,CAAC,CAAC,GAAG,CAAC,IAAI,GAAGT,MAAM,CAAC,GAAG,EAAES,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC;AACjE;AAEA,SAASC,iBAAiBA,CAACC,MAAM,EAAE;EACjC,IAAIC,WAAW,GAAGD,MAAM,CAACE,GAAG;IACxBA,GAAG,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;IAC9CE,WAAW,GAAGH,MAAM,CAACI,GAAG;IACxBA,GAAG,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,WAAW;EAClD,IAAIE,SAAS,GAAG,CAAC,GAAG,CAAC;EACrB,IAAIC,OAAO,GAAG,CAAC,GAAG,CAAC;EACnB,IAAIC,WAAW,GAAG,CAAC,GAAG,CAAC;EACvB,IAAIC,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAIL,GAAG,EAAEK,EAAE,EAAE,EAAE;IAChCJ,SAAS,CAACK,IAAI,CAAC,SAAS,CAAC;IACzBH,WAAW,CAACG,IAAI,CAAC,QAAQ,CAAC;IAC1BJ,OAAO,CAACI,IAAI,CAAC,SAAS,CAAC;EACzB;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,GAAG,EAAES,CAAC,EAAE,EAAE;IAC7BH,MAAM,IAAI,IAAI,GAAGF,OAAO,CAACM,IAAI,CAAC,EAAE,CAAC;EACnC;EAEA,OAAOP,SAAS,CAACO,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,GAAGL,WAAW,CAACK,IAAI,CAAC,EAAE,CAAC,GAAGJ,MAAM;AAClE;AAEA,SAASK,YAAYA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAClC,IAAIC,IAAI,GAAGD,MAAM;EAEjB,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IAC9BD,IAAI,GAAG,IAAI,GAAGA,IAAI;EACpB;EAEA,IAAIF,IAAI,KAAK,WAAW,EAAE;IACxB,OAAOE,IAAI,CAACE,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI;EACpE,CAAC,MAAM;IACL,IAAIC,KAAK,GAAG,CAAC;IAEb,IAAIL,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MACnB,OAAOF,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,YAAY;QACrC,OAAO,IAAI,GAAGE,KAAK,EAAE,GAAG,IAAI;MAC9B,CAAC,CAAC,CAACD,IAAI,CAAC,CAAC;IACX,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;AACF;AAEA,SAASE,mBAAmBA,CAACN,IAAI,EAAEO,QAAQ,EAAE;EAC3C,OAAO;IACLP,IAAI,EAAEA,IAAI;IACVO,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAE;MACTC,KAAK,EAAET,IAAI,CAACE,MAAM;MAClBQ,GAAG,EAAEV,IAAI,CAACE;IACZ;EACF,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASS,YAAYA,CAACZ,MAAM,EAAED,IAAI,EAAEd,MAAM,EAAE;EAC1C,IAAI,OAAOV,gBAAgB,CAACwB,IAAI,CAAC,KAAK,WAAW,EAAE;IACjD,OAAO;MACLE,IAAI,EAAE,EAAE,GAAG1B,gBAAgB,CAACwB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGC,MAAM,GAAGzB,gBAAgB,CAACwB,IAAI,CAAC,CAAC,CAAC,CAAC;MACzEU,SAAS,EAAE;QACTC,KAAK,EAAEnC,gBAAgB,CAACwB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,MAAM;QACvCQ,GAAG,EAAEpC,gBAAgB,CAACwB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,MAAM,GAAGH,MAAM,CAACG;MACjD;IACF,CAAC;EACH;EAEA,QAAQJ,IAAI;IACV,KAAK,KAAK;MACR,IAAIc,UAAU,GAAG5B,MAAM,CAAC6B,WAAW,KAAK,CAAC,GAAG,IAAI,GAAG,GAAG,CAACxC,MAAM,CAACW,MAAM,CAAC6B,WAAW,CAAC;MACjF,IAAIC,eAAe,GAAGF,UAAU,GAAGb,MAAM,CAACI,OAAO,CAAC,KAAK,EAAE,IAAI,GAAGS,UAAU,CAAC;MAC3E,IAAIG,cAAc,GAAGhB,MAAM,CAACiB,QAAQ,CAAC,IAAI,CAAC,GAAGjB,MAAM,CAACkB,KAAK,CAAC,KAAK,CAAC,CAACf,MAAM,GAAG,CAAC;MAC3E,OAAO;QACLF,IAAI,EAAEc,eAAe;QACrBN,SAAS,EAAE;UACTC,KAAK,EAAEzB,MAAM,CAAC6B,WAAW;UACzBH,GAAG,EAAE1B,MAAM,CAAC6B,WAAW,IAAIE,cAAc,GAAG,CAAC,CAAC,GAAGhB,MAAM,CAACG;QAC1D;MACF,CAAC;IAEH,KAAK,WAAW;MACd,OAAOI,mBAAmB,CAACT,YAAY,CAAC,WAAW,EAAEE,MAAM,CAAC,EAAE,IAAI,CAAC;IAErE,KAAK,OAAO;MACV,OAAOO,mBAAmB,CAACT,YAAY,CAAC,OAAO,EAAEE,MAAM,CAAC,EAAE,IAAI,CAAC;IAEjE,KAAK,IAAI;MACP,OAAOO,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC;IAEzC,KAAK,OAAO;MACV,OAAO;QACLN,IAAI,EAAEjB,iBAAiB,CAACC,MAAM,CAAC;QAC/BuB,QAAQ,EAAE;MACZ,CAAC;IAEH,KAAK,OAAO;MACV,OAAO;QACLP,IAAI,EAAE,IAAI,IAAID,MAAM,IAAIf,MAAM,CAACe,MAAM,CAAC,GAAG,IAAI,IAAIf,MAAM,CAACkC,QAAQ,IAAI,EAAE,CAAC,GAAG,GAAG;QAC7EV,SAAS,EAAE;UACTC,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEX,MAAM,CAACG,MAAM,GAAG;QACvB;MACF,CAAC;IAEH,KAAK,MAAM;MACT,OAAO;QACLF,IAAI,EAAE,GAAG,GAAGD,MAAM,GAAG,IAAI,IAAIf,MAAM,CAACmC,OAAO,IAAI,EAAE,CAAC,GAAG,GAAG;QACxDX,SAAS,EAAE;UACTC,KAAK,EAAE,CAAC;UACRC,GAAG,EAAEX,MAAM,CAACG,MAAM,GAAG;QACvB;MACF,CAAC;EACL;EAEA,OAAO;IACLF,IAAI,EAAED,MAAM;IACZS,SAAS,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAEX,MAAM,CAACG;IACd;EACF,CAAC;AACH;AAEA,eAAeS,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}