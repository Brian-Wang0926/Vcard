{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleOAuthProvider, useGoogleLogin } from \"@react-oauth/google\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  // 配置登录逻辑\n  const {\n    signIn\n  } = useGoogleLogin({\n    onSuccess: response => {\n      console.log(\"Login successful\", response);\n      // 此处可以进行后续操作，例如状态更新、重定向等\n    },\n\n    onFailure: error => {\n      console.error(\"Login failed\", error);\n      // 此处可以处理登录失败，例如弹出错误提示\n    },\n\n    flow: \"auth-code\" // 使用 \"auth-code\" 流程\n  });\n\n  return (\n    /*#__PURE__*/\n    // 使用 GoogleOAuthProvider 组件包裹你的组件，并传入你的 Google 客户端ID和回调函数\n    _jsxDEV(GoogleOAuthProvider, {\n      clientId: \"YOUR_GOOGLE_CLIENT_ID\" // 请确保替换为你的实际 Google 客户端 ID\n      ,\n      onSuccess: handleSuccess // 登录成功的回调\n      ,\n      onFailure: handleFailure // 登录失败的回调\n      ,\n      children: [/*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(LoginComponent, \"QecT91aAQ8VpaPV0pp8B14sjybY=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","GoogleOAuthProvider","useGoogleLogin","jsxDEV","_jsxDEV","LoginComponent","_s","signIn","onSuccess","response","console","log","onFailure","error","flow","clientId","handleSuccess","handleFailure","children","LoginButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js"],"sourcesContent":["import React from \"react\";\nimport { GoogleOAuthProvider, useGoogleLogin } from \"@react-oauth/google\";\n\nconst LoginComponent = () => {\n  // 配置登录逻辑\n  const { signIn } = useGoogleLogin({\n    onSuccess: (response) => {\n      console.log(\"Login successful\", response);\n      // 此处可以进行后续操作，例如状态更新、重定向等\n    },\n    onFailure: (error) => {\n      console.error(\"Login failed\", error);\n      // 此处可以处理登录失败，例如弹出错误提示\n    },\n    flow: \"auth-code\", // 使用 \"auth-code\" 流程\n  });\n\n  return (\n    // 使用 GoogleOAuthProvider 组件包裹你的组件，并传入你的 Google 客户端ID和回调函数\n    <GoogleOAuthProvider\n      clientId=\"YOUR_GOOGLE_CLIENT_ID\" // 请确保替换为你的实际 Google 客户端 ID\n      onSuccess={handleSuccess} // 登录成功的回调\n      onFailure={handleFailure} // 登录失败的回调\n    >\n      <LoginButton /> {/* 渲染登录按钮组件 */}\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGL,cAAc,CAAC;IAChCM,SAAS,EAAGC,QAAQ,IAAK;MACvBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;MACzC;IACF,CAAC;;IACDG,SAAS,EAAGC,KAAK,IAAK;MACpBH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC;IACF,CAAC;;IACDC,IAAI,EAAE,WAAW,CAAE;EACrB,CAAC,CAAC;;EAEF;IAAA;IACE;IACAV,OAAA,CAACH,mBAAmB;MAClBc,QAAQ,EAAC,uBAAuB,CAAC;MAAA;MACjCP,SAAS,EAAEQ,aAAc,CAAC;MAAA;MAC1BJ,SAAS,EAAEK,aAAc,CAAC;MAAA;MAAAC,QAAA,gBAE1Bd,OAAA,CAACe,WAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAE1B,CAAC;AAACjB,EAAA,CAxBID,cAAc;EAAA,QAECH,cAAc;AAAA;AAAAsB,EAAA,GAF7BnB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}