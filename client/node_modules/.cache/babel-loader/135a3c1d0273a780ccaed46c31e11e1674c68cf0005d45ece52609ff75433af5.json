{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js\";\nimport React from \"react\";\nimport { GoogleOAuthProvider, useGoogleLogin } from \"@react-oauth/google\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  // 成功回调函数\n  const handleSuccess = response => {\n    console.log(\"Login successful\", response);\n    // 此处可以进行后续操作，例如状态更新、重定向等\n  };\n\n  // 失败回调函数\n  const handleFailure = error => {\n    console.error(\"Login failed\", error);\n    // 此处可以处理登录失败，例如弹出错误提示\n  };\n\n  return (\n    /*#__PURE__*/\n    // 使用 GoogleOAuthProvider 组件包裹你的组件，并传入你的 Google 客户端ID和回调函数\n    _jsxDEV(GoogleOAuthProvider, {\n      clientId: \"YOUR_GOOGLE_CLIENT_ID\" // 请确保替换为你的实际 Google 客户端 ID\n      ,\n      onSuccess: handleSuccess // 登录成功的回调\n      ,\n      onFailure: handleFailure // 登录失败的回调\n      ,\n      children: [/*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","GoogleOAuthProvider","useGoogleLogin","jsxDEV","_jsxDEV","LoginComponent","handleSuccess","response","console","log","handleFailure","error","clientId","onSuccess","onFailure","children","LoginButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js"],"sourcesContent":["import React from \"react\";\nimport { GoogleOAuthProvider, useGoogleLogin } from \"@react-oauth/google\";\n\nconst LoginComponent = () => {\n  // 成功回调函数\n  const handleSuccess = (response) => {\n    console.log(\"Login successful\", response);\n    // 此处可以进行后续操作，例如状态更新、重定向等\n  };\n\n  // 失败回调函数\n  const handleFailure = (error) => {\n    console.error(\"Login failed\", error);\n    // 此处可以处理登录失败，例如弹出错误提示\n  };\n\n  return (\n    // 使用 GoogleOAuthProvider 组件包裹你的组件，并传入你的 Google 客户端ID和回调函数\n    <GoogleOAuthProvider\n      clientId=\"YOUR_GOOGLE_CLIENT_ID\" // 请确保替换为你的实际 Google 客户端 ID\n      onSuccess={handleSuccess} // 登录成功的回调\n      onFailure={handleFailure} // 登录失败的回调\n    >\n      <LoginButton /> {/* 渲染登录按钮组件 */}\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B;EACA,MAAMC,aAAa,GAAIC,QAAQ,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMG,aAAa,GAAIC,KAAK,IAAK;IAC/BH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;;EAED;IAAA;IACE;IACAP,OAAA,CAACH,mBAAmB;MAClBW,QAAQ,EAAC,uBAAuB,CAAC;MAAA;MACjCC,SAAS,EAAEP,aAAc,CAAC;MAAA;MAC1BQ,SAAS,EAAEJ,aAAc,CAAC;MAAA;MAAAK,QAAA,gBAE1BX,OAAA,CAACY,WAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAE1B,CAAC;AAACC,EAAA,GAvBIhB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}