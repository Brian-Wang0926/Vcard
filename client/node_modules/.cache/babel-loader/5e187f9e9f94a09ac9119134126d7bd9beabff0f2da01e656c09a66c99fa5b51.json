{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [clientId, setClientId] = useState(\"\");\n\n  // 當組件加載時，從後端獲取 Google 客戶端 ID。\n  axios.get(\"http://localhost:3005/auth/config/google\").then(response => {\n    setClientId(response.data.clientId);\n  }).catch(error => {\n    console.error(\"錯誤發生: \", error);\n  });\n  const handleLogin = async () => {\n    // 重定向到 Google 的 OAuth 2.0 登錄頁面。\n    try {\n      let response = await AuthService.login(email, password);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      window.alert(\"登入成功，您現在將被重新導向到個人資料頁面\");\n      setCurrentUser(AuthService.getCurrentUser);\n      navigate(\"/profile\");\n    } catch (e) {\n      setMessage(e.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: clientId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-lg btn-google\" // 注意：應該使用 className 而不是 class\n      ,\n      style: {\n        padding: \"0.2rem 0.5rem\",\n        backgroundColor: \"rgb(7, 7, 7)\",\n        color: \"rgb(255, 255, 255)\"\n      },\n      onClick: handleLogin // 確保 onClick 被正確設置\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/color/16/000000/google-logo.png\",\n        alt: \"Google logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), \"\\u4F7F\\u7528 Google \\u767B\\u5165\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u52A0\\u8F09\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"J8sJ8nJteJX1ZIJeRKTaenfGn+o=\");\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginComponent","_s","clientId","setClientId","get","then","response","data","catch","error","console","handleLogin","AuthService","login","email","password","localStorage","setItem","JSON","stringify","window","alert","setCurrentUser","getCurrentUser","navigate","e","setMessage","children","className","style","padding","backgroundColor","color","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LoginComponent = () => {\n  const [clientId, setClientId] = useState(\"\");\n\n  // 當組件加載時，從後端獲取 Google 客戶端 ID。\n  axios\n    .get(\"http://localhost:3005/auth/config/google\")\n    .then((response) => {\n      setClientId(response.data.clientId);\n    })\n    .catch((error) => {\n      console.error(\"錯誤發生: \", error);\n    });\n\n  const handleLogin = async() => {\n    // 重定向到 Google 的 OAuth 2.0 登錄頁面。\n    try {\n        let response = await AuthService.login(email, password);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        window.alert(\"登入成功，您現在將被重新導向到個人資料頁面\");\n        setCurrentUser(AuthService.getCurrentUser)\n        navigate(\"/profile\");\n      } catch (e) {\n        setMessage(e.response.data);\n      }\n  };\n\n  return (\n    <div>\n      {clientId ? (\n        <button\n          className=\"btn btn-lg btn-google\" // 注意：應該使用 className 而不是 class\n          style={{\n            padding: \"0.2rem 0.5rem\",\n            backgroundColor: \"rgb(7, 7, 7)\",\n            color: \"rgb(255, 255, 255)\",\n          }}\n          onClick={handleLogin} // 確保 onClick 被正確設置\n        >\n          <img\n            src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\n            alt=\"Google logo\"\n          />\n          使用 Google 登入\n        </button>\n      ) : (\n        <div>加載中...</div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,KAAK,CACFO,GAAG,CAAC,0CAA0C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAK;IAClBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACL,QAAQ,CAAC;EACrC,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC,CAAC,CAAC;EAEJ,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC7B;IACA,IAAI;MACA,IAAIL,QAAQ,GAAG,MAAMM,WAAW,CAACC,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACvDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3Da,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACrCC,cAAc,CAACV,WAAW,CAACW,cAAc,CAAC;MAC1CC,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,UAAU,CAACD,CAAC,CAACnB,QAAQ,CAACC,IAAI,CAAC;IAC7B;EACJ,CAAC;EAED,oBACER,OAAA;IAAA4B,QAAA,EACGzB,QAAQ,gBACPH,OAAA;MACE6B,SAAS,EAAC,uBAAuB,CAAC;MAAA;MAClCC,KAAK,EAAE;QACLC,OAAO,EAAE,eAAe;QACxBC,eAAe,EAAE,cAAc;QAC/BC,KAAK,EAAE;MACT,CAAE;MACFC,OAAO,EAAEtB,WAAY,CAAC;MAAA;MAAAgB,QAAA,gBAEtB5B,OAAA;QACEmC,GAAG,EAAC,wDAAwD;QAC5DC,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,oCAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETxC,OAAA;MAAA4B,QAAA,EAAK;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAjDID,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}