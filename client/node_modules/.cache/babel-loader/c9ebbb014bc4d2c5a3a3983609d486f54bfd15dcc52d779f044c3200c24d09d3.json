{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/**\n * Since the Markdown Editor will lose input focus when user tpye a Tab key,\n * this is a built-in plugin to enable user to input Tab character.\n * see src/demo/index.tsx.\n */\nimport * as React from 'react';\nimport { PluginComponent } from '../Plugin';\nimport DropList from '../../components/DropList';\nimport i18n from '../../i18n';\nimport TabMapList from './TabMapList';\nimport Icon from '../../components/Icon';\n/**\n * @field tabMapValue:  Number of spaces will be inputted. Especially, note that 1 means a '\\t' instead of ' '.\n * @field show:         Whether to show TabMapList.\n */\n\nvar TabInsert = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(TabInsert, _PluginComponent);\n  function TabInsert(props) {\n    var _this;\n    _this = _PluginComponent.call(this, props) || this;\n    _this.show = _this.show.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.handleChangeMapValue = _this.handleChangeMapValue.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tabMapValue: _this.getConfig('tabMapValue'),\n      show: false\n    };\n    _this.handleKeyboard = {\n      key: 'Tab',\n      keyCode: 9,\n      aliasCommand: true,\n      withKey: [],\n      callback: function callback() {\n        return _this.editor.insertMarkdown('tab', {\n          tabMapValue: _this.state.tabMapValue\n        });\n      }\n    };\n    return _this;\n  }\n  var _proto = TabInsert.prototype;\n  _proto.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n  _proto.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n  _proto.handleChangeMapValue = function handleChangeMapValue(mapValue) {\n    this.setState({\n      tabMapValue: mapValue\n    });\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.editorConfig.shortcuts) {\n      this.editor.onKeyboard(this.handleKeyboard);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.offKeyboard(this.handleKeyboard);\n  };\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button button-type-header\",\n      title: i18n.get('selectTabMap'),\n      onClick: this.show,\n      onMouseLeave: this.hide\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"tab\"\n    }), /*#__PURE__*/React.createElement(DropList, {\n      show: this.state.show,\n      onClose: this.hide\n    }, /*#__PURE__*/React.createElement(TabMapList, {\n      value: this.state.tabMapValue,\n      onSelectMapValue: this.handleChangeMapValue\n    })));\n  };\n  return TabInsert;\n}(PluginComponent);\nTabInsert.pluginName = 'tab-insert';\nTabInsert.defaultConfig = {\n  tabMapValue: 1\n};\nexport { TabInsert as default };","map":{"version":3,"names":["_assertThisInitialized","_inheritsLoose","React","PluginComponent","DropList","i18n","TabMapList","Icon","TabInsert","_PluginComponent","props","_this","call","show","bind","hide","handleChangeMapValue","state","tabMapValue","getConfig","handleKeyboard","key","keyCode","aliasCommand","withKey","callback","editor","insertMarkdown","_proto","prototype","setState","mapValue","componentDidMount","editorConfig","shortcuts","onKeyboard","componentWillUnmount","offKeyboard","render","createElement","className","title","get","onClick","onMouseLeave","type","onClose","value","onSelectMapValue","pluginName","defaultConfig","default"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/node_modules/react-markdown-editor-lite/esm/plugins/tabInsert/index.js"],"sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/**\n * Since the Markdown Editor will lose input focus when user tpye a Tab key,\n * this is a built-in plugin to enable user to input Tab character.\n * see src/demo/index.tsx.\n */\nimport * as React from 'react';\nimport { PluginComponent } from '../Plugin';\nimport DropList from '../../components/DropList';\nimport i18n from '../../i18n';\nimport TabMapList from './TabMapList';\nimport Icon from '../../components/Icon';\n/**\n * @field tabMapValue:  Number of spaces will be inputted. Especially, note that 1 means a '\\t' instead of ' '.\n * @field show:         Whether to show TabMapList.\n */\n\nvar TabInsert = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(TabInsert, _PluginComponent);\n\n  function TabInsert(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.show = _this.show.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.handleChangeMapValue = _this.handleChangeMapValue.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tabMapValue: _this.getConfig('tabMapValue'),\n      show: false\n    };\n    _this.handleKeyboard = {\n      key: 'Tab',\n      keyCode: 9,\n      aliasCommand: true,\n      withKey: [],\n      callback: function callback() {\n        return _this.editor.insertMarkdown('tab', {\n          tabMapValue: _this.state.tabMapValue\n        });\n      }\n    };\n    return _this;\n  }\n\n  var _proto = TabInsert.prototype;\n\n  _proto.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n\n  _proto.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n\n  _proto.handleChangeMapValue = function handleChangeMapValue(mapValue) {\n    this.setState({\n      tabMapValue: mapValue\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.editorConfig.shortcuts) {\n      this.editor.onKeyboard(this.handleKeyboard);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.offKeyboard(this.handleKeyboard);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button button-type-header\",\n      title: i18n.get('selectTabMap'),\n      onClick: this.show,\n      onMouseLeave: this.hide\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"tab\"\n    }), /*#__PURE__*/React.createElement(DropList, {\n      show: this.state.show,\n      onClose: this.hide\n    }, /*#__PURE__*/React.createElement(TabMapList, {\n      value: this.state.tabMapValue,\n      onSelectMapValue: this.handleChangeMapValue\n    })));\n  };\n\n  return TabInsert;\n}(PluginComponent);\n\nTabInsert.pluginName = 'tab-insert';\nTabInsert.defaultConfig = {\n  tabMapValue: 1\n};\nexport { TabInsert as default };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}