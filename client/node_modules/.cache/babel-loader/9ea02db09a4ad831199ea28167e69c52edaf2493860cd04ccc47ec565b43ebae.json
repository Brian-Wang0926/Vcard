{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [clientId, setClientId] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 當組件加載時，從後端獲取 Google 客戶端 ID。\n    axios.get(\"http://localhost:3005/auth/config/google\").then(response => {\n      setClientId(response.data.clientId);\n    }).catch(error => {\n      console.error(\"錯誤發生: \", error);\n    });\n    if (result.token) {\n      localStorage.setItem(\"authToken\", result.token);\n      // 為了調試，檢查 token 是否已經保存\n      const storedToken = localStorage.getItem(\"authToken\");\n      console.log(storedToken); // 應該輸出您保存的 token\n      navigate(\"/\"); // token已經保存，重定向到主頁\n    }\n  }, [navigate]); // 依賴於 location，當 location 改變時，此 useEffect 將重新運行\n\n  const handleLogin = () => {\n    // 重定向到 Google 的 OAuth 2.0 登錄頁面。\n    window.location.href = \"http://localhost:3005/auth/google\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"btn btn-lg btn-google\",\n      href: `${process.env.REACT_APP_API_URL_AUTH}/google`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"mr-2\",\n          src: \"https://img.icons8.com/color/16/000000/google-logo.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \"Continue with google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"toFahRytrbIRTwaV7d6Ow+gS1J8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginComponent","_s","clientId","setClientId","navigate","get","then","response","data","catch","error","console","result","token","localStorage","setItem","storedToken","getItem","log","handleLogin","window","location","href","children","className","process","env","REACT_APP_API_URL_AUTH","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginComponent = () => {\n  const [clientId, setClientId] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 當組件加載時，從後端獲取 Google 客戶端 ID。\n    axios\n      .get(\"http://localhost:3005/auth/config/google\")\n      .then((response) => {\n        setClientId(response.data.clientId);\n      })\n      .catch((error) => {\n        console.error(\"錯誤發生: \", error);\n      });\n\n    if (result.token) {\n      localStorage.setItem(\"authToken\", result.token);\n      // 為了調試，檢查 token 是否已經保存\n      const storedToken = localStorage.getItem(\"authToken\");\n      console.log(storedToken); // 應該輸出您保存的 token\n      navigate(\"/\"); // token已經保存，重定向到主頁\n    }\n  }, [navigate]); // 依賴於 location，當 location 改變時，此 useEffect 將重新運行\n\n  const handleLogin = () => {\n    // 重定向到 Google 的 OAuth 2.0 登錄頁面。\n    window.location.href = \"http://localhost:3005/auth/google\";\n  };\n\n  return (\n    <div>\n      {/* {clientId ? (\n        <button\n          className=\"btn btn-lg btn-google\" // 注意：應該使用 className 而不是 class\n          style={{\n            padding: \"0.2rem 0.5rem\",\n            backgroundColor: \"rgb(7, 7, 7)\",\n            color: \"rgb(255, 255, 255)\",\n          }}\n          onClick={handleLogin} // 確保 onClick 被正確設置\n        >\n          <img\n            src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\n            alt=\"Google logo\"\n          />\n          使用 Google 登入\n        </button>\n      ) : (\n        <div>加載中...</div>\n      )} */}\n      <a\n        className=\"btn btn-lg btn-google\"\n        href={`${process.env.REACT_APP_API_URL_AUTH}/google`}\n      >\n        <div className=\"flex flex-row justify-center items-center\">\n          <img className=\"mr-2\" src=\"https://img.icons8.com/color/16/000000/google-logo.png\" alt=\"\" />\n          Continue with google\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFS,GAAG,CAAC,0CAA0C,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC;IACrC,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;IAEJ,IAAIE,MAAM,CAACC,KAAK,EAAE;MAChBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,MAAM,CAACC,KAAK,CAAC;MAC/C;MACA,MAAMG,WAAW,GAAGF,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC;MACrDN,OAAO,CAACO,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC;MAC1BZ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eAoBExB,OAAA;MACEyB,SAAS,EAAC,uBAAuB;MACjCF,IAAI,EAAG,GAAEG,OAAO,CAACC,GAAG,CAACC,sBAAuB,SAAS;MAAAJ,QAAA,eAErDxB,OAAA;QAAKyB,SAAS,EAAC,2CAA2C;QAAAD,QAAA,gBACxDxB,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAACI,GAAG,EAAC,wDAAwD;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,wBAE9F;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAChC,EAAA,CA7DID,cAAc;EAAA,QAEDH,WAAW;AAAA;AAAAqC,EAAA,GAFxBlC,cAAc;AA+DpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}