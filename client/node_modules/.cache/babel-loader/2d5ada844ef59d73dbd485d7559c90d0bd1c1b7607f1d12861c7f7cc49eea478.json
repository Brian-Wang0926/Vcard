{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL_AUTH;\nclass AuthService {\n  // async login(userData) {\n  //   const response = await axios.post(API_URL + \"/login\", userData);\n  //   if (response.data) {\n  //     localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //     return response.data;\n  //   }\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  getCurrentUser() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user ? user : null;\n  }\n}\nconst authServiceInstance = new AuthService();\nexport default authServiceInstance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL_AUTH","AuthService","logout","localStorage","removeItem","getCurrentUser","user","JSON","parse","getItem","authServiceInstance"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/services/auth-service.js"],"sourcesContent":["import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL_AUTH;\n\nclass AuthService {\n  // async login(userData) {\n  //   const response = await axios.post(API_URL + \"/login\", userData);\n  //   if (response.data) {\n  //     localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //     return response.data;\n  //   }\n  // }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user ? user : null;\n  }\n\n  \n\n}\n\nconst authServiceInstance = new AuthService();\nexport default authServiceInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAElD,MAAMC,WAAW,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,MAAMA,CAAA,EAAG;IACPC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,cAAcA,CAAA,EAAG;IACf,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,OAAOH,IAAI,GAAGA,IAAI,GAAG,IAAI;EAC3B;AAIF;AAEA,MAAMI,mBAAmB,GAAG,IAAIT,WAAW,CAAC,CAAC;AAC7C,eAAeS,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}