{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/github.css\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostComponent = () => {\n  _s();\n  const mdParser = new MarkdownIt({\n    breaks: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return '<pre class=\"hljs\"><code>' + hljs.highlight(lang, str, true).value + \"</code></pre>\";\n        } catch (__) {}\n      }\n      return '<pre class=\"hljs\"><code>' + mdParser.utils.escapeHtml(str) + \"</code></pre>\";\n    }\n  });\n  const [content, setContent] = useState(localStorage.getItem('content') || '');\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const handleImageUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      // TODO: 上传到S3，并获取URL\n      const blobUrl = URL.createObjectURL(file);\n      // 假设我们有一个函数 uploadToS3 上传到S3并返回URL\n      // const imageUrl = await uploadToS3(file);\n      // 使用真实的imageUrl而不是blobUrl\n      setUploadedImages([...uploadedImages, blobUrl]); // 保存上传的图像以便稍后处理\n      callback(blobUrl);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    // 更新内容状态\n    setContent(text);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // TODO: 处理图像上传到S3\n    // 例如，你可能需要遍历 uploadedImages 并上传每个图像\n    // 然后替换内容中的Blob URL为S3 URL\n\n    // TODO: 将最终内容和图像URL数组发送到后端\n    // 这可能涉及到调用一个API将文章内容和图像的S3 URL存储在MongoDB中\n\n    console.log(\"Content to submit:\", content);\n    console.log(\"Images to upload:\", uploadedImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prose post-editor-component max-w-screen-xl mx-auto mt-4 pt-14\",\n    children: [/*#__PURE__*/_jsxDEV(MdEditor, {\n      value: content,\n      renderHTML: text => mdParser.render(text),\n      onChange: handleEditorChange,\n      onImageUpload: handleImageUpload,\n      className: \"h-[40rem] overflow-y-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\",\n      children: \"Submit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComponent, \"T6+Kxr5vuYiEhqCoZrqqj7CZNFM=\");\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["React","useState","MdEditor","MarkdownIt","hljs","jsxDEV","_jsxDEV","PostComponent","_s","mdParser","breaks","highlight","str","lang","getLanguage","value","__","utils","escapeHtml","content","setContent","localStorage","getItem","uploadedImages","setUploadedImages","handleImageUpload","file","callback","reader","FileReader","onload","blobUrl","URL","createObjectURL","readAsDataURL","handleEditorChange","html","text","handleSubmit","e","preventDefault","console","log","className","children","renderHTML","render","onChange","onImageUpload","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/github.css\";\nimport \"react-markdown-editor-lite/lib/index.css\";\n\nconst PostComponent = () => {\n  const mdParser = new MarkdownIt({\n    breaks: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return (\n            '<pre class=\"hljs\"><code>' +\n            hljs.highlight(lang, str, true).value +\n            \"</code></pre>\"\n          );\n        } catch (__) {}\n      }\n      return (\n        '<pre class=\"hljs\"><code>' +\n        mdParser.utils.escapeHtml(str) +\n        \"</code></pre>\"\n      );\n    },\n  });\n  const [content, setContent] = useState(localStorage.getItem('content') || '');\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  const handleImageUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      // TODO: 上传到S3，并获取URL\n      const blobUrl = URL.createObjectURL(file);\n      // 假设我们有一个函数 uploadToS3 上传到S3并返回URL\n      // const imageUrl = await uploadToS3(file);\n      // 使用真实的imageUrl而不是blobUrl\n      setUploadedImages([...uploadedImages, blobUrl]); // 保存上传的图像以便稍后处理\n      callback(blobUrl);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleEditorChange = ({ html, text }) => {\n    // 更新内容状态\n    setContent(text);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // TODO: 处理图像上传到S3\n    // 例如，你可能需要遍历 uploadedImages 并上传每个图像\n    // 然后替换内容中的Blob URL为S3 URL\n\n    // TODO: 将最终内容和图像URL数组发送到后端\n    // 这可能涉及到调用一个API将文章内容和图像的S3 URL存储在MongoDB中\n\n    console.log(\"Content to submit:\", content);\n    console.log(\"Images to upload:\", uploadedImages);\n  };\n\n  return (\n    <div className=\"prose post-editor-component max-w-screen-xl mx-auto mt-4 pt-14\">\n      <MdEditor\n        value={content}\n        renderHTML={(text) => mdParser.render(text)}\n        onChange={handleEditorChange}\n        onImageUpload={handleImageUpload}\n        className=\"h-[40rem] overflow-y-auto\"\n      />\n      <button\n        onClick={handleSubmit}\n        className=\"submit-button bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\"\n      >\n        Submit Post\n      </button>\n    </div>\n  );\n};\n\nexport default PostComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,gCAAgC;AACvC,OAAO,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAG,IAAIN,UAAU,CAAC;IAC9BO,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;MAC9B,IAAIA,IAAI,IAAIT,IAAI,CAACU,WAAW,CAACD,IAAI,CAAC,EAAE;QAClC,IAAI;UACF,OACE,0BAA0B,GAC1BT,IAAI,CAACO,SAAS,CAACE,IAAI,EAAED,GAAG,EAAE,IAAI,CAAC,CAACG,KAAK,GACrC,eAAe;QAEnB,CAAC,CAAC,OAAOC,EAAE,EAAE,CAAC;MAChB;MACA,OACE,0BAA0B,GAC1BP,QAAQ,CAACQ,KAAK,CAACC,UAAU,CAACN,GAAG,CAAC,GAC9B,eAAe;IAEnB;EACF,CAAC,CAAC;EACF,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAACoB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;EAC7E,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMwB,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC5C,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpB;MACA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;MACzC;MACA;MACA;MACAF,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEQ,OAAO,CAAC,CAAC,CAAC,CAAC;MACjDJ,QAAQ,CAACI,OAAO,CAAC;IACnB,CAAC;IACDH,MAAM,CAACM,aAAa,CAACR,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMS,kBAAkB,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IAC7C;IACAjB,UAAU,CAACiB,IAAI,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA;IACA;;IAEA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEvB,OAAO,CAAC;IAC1CsB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEnB,cAAc,CAAC;EAClD,CAAC;EAED,oBACEjB,OAAA;IAAKqC,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAC7EtC,OAAA,CAACJ,QAAQ;MACPa,KAAK,EAAEI,OAAQ;MACf0B,UAAU,EAAGR,IAAI,IAAK5B,QAAQ,CAACqC,MAAM,CAACT,IAAI,CAAE;MAC5CU,QAAQ,EAAEZ,kBAAmB;MAC7Ba,aAAa,EAAEvB,iBAAkB;MACjCkB,SAAS,EAAC;IAA2B;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF9C,OAAA;MACE+C,OAAO,EAAEf,YAAa;MACtBK,SAAS,EAAC,gEAAgE;MAAAC,QAAA,EAC3E;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAzEID,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AA2EnB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}