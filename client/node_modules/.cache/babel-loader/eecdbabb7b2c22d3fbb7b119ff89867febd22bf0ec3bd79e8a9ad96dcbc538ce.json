{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport authServiceInstance from \"../services/auth-service\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n  const navigate = useNavigate();\n  const mockLogin = async () => {\n    try {\n      const response = await authServiceInstance.mockLogin({\n        userId: selectedUserId\n      });\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        // 可以在這裡加上一些提示或者重新導向，例如：跳轉到主頁\n        navigate(\"/profile\");\n      }\n    } catch (error) {\n      console.error(\"模擬登入失敗:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"bg-black text-white py-1 px-2 flex items-center justify-center rounded-lg w-1/3 mt-10\",\n      href: `${process.env.REACT_APP_API_URL}/api/auth/google`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/color/16/000000/google-logo.png\",\n        className: \"mr-2\",\n        alt: \"Google logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \"Login with google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUserId,\n      onChange: e => setSelectedUserId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select a mock user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"6540dc219b627a575d2a67ba\",\n        children: \"Mock User 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"user2\",\n        children: \"Mock User 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\",\n      onClick: mockLogin,\n      children: \"\\u6A21\\u64EC\\u767B\\u5165\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"jFGz+A0Ly1PafiSXeQ0iDGu1Gsw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useState","authServiceInstance","useNavigate","jsxDEV","_jsxDEV","LoginComponent","_s","selectedUserId","setSelectedUserId","navigate","mockLogin","response","userId","data","token","localStorage","setItem","JSON","stringify","error","console","className","children","href","process","env","REACT_APP_API_URL","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/login-component.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport authServiceInstance from \"../services/auth-service\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginComponent = () => {\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n  const navigate = useNavigate();\n  \n  const mockLogin = async () => {\n    try {\n      const response = await authServiceInstance.mockLogin({\n        userId: selectedUserId,\n      });\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        // 可以在這裡加上一些提示或者重新導向，例如：跳轉到主頁\n        navigate(\"/profile\");\n      }\n    } catch (error) {\n      console.error(\"模擬登入失敗:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <a\n        className=\"bg-black text-white py-1 px-2 flex items-center justify-center rounded-lg w-1/3 mt-10\"\n        href={`${process.env.REACT_APP_API_URL}/api/auth/google`}\n      >\n        <img\n          src=\"https://img.icons8.com/color/16/000000/google-logo.png\"\n          className=\"mr-2\"\n          alt=\"Google logo\"\n        />\n        Login with google\n      </a>\n      <select\n        value={selectedUserId}\n        onChange={(e) => setSelectedUserId(e.target.value)}\n      >\n        <option value=\"\" disabled>\n          Select a mock user\n        </option>\n        <option value=\"6540dc219b627a575d2a67ba\">Mock User 1</option>\n        <option value=\"user2\">Mock User 2</option>\n        {/* 添加更多的模擬使用者選項 */}\n      </select>\n      <button\n        className=\"bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\"\n        onClick={mockLogin}\n      >\n        模擬登入\n      </button>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,mBAAmB,CAACS,SAAS,CAAC;QACnDE,MAAM,EAAEL;MACV,CAAC,CAAC;MACF,IAAII,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACxCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC3D;QACAJ,QAAQ,CAAC,UAAU,CAAC;MACtB;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClClB,OAAA;MACEiB,SAAS,EAAC,uFAAuF;MACjGE,IAAI,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAkB;MAAAJ,QAAA,gBAEzDlB,OAAA;QACEuB,GAAG,EAAC,wDAAwD;QAC5DN,SAAS,EAAC,MAAM;QAChBO,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,qBAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ5B,OAAA;MACE6B,KAAK,EAAE1B,cAAe;MACtB2B,QAAQ,EAAGC,CAAC,IAAK3B,iBAAiB,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAX,QAAA,gBAEnDlB,OAAA;QAAQ6B,KAAK,EAAC,EAAE;QAACI,QAAQ;QAAAf,QAAA,EAAC;MAE1B;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5B,OAAA;QAAQ6B,KAAK,EAAC,0BAA0B;QAAAX,QAAA,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7D5B,OAAA;QAAQ6B,KAAK,EAAC,OAAO;QAAAX,QAAA,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CAAC,eACT5B,OAAA;MACEiB,SAAS,EAAC,kDAAkD;MAC5DiB,OAAO,EAAE5B,SAAU;MAAAY,QAAA,EACpB;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnDID,cAAc;EAAA,QAEDH,WAAW;AAAA;AAAAqC,EAAA,GAFxBlC,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}