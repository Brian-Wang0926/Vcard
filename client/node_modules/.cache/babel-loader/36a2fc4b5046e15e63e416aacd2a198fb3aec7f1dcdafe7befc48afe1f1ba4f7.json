{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function (cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      CodeMirror.on(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose = function () {\n        onComposition(cm);\n      });\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      CodeMirror.off(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder CodeMirror-line-like\";\n    var placeHolder = cm.getOption(\"placeholder\");\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder);\n    elt.appendChild(placeHolder);\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n  function onComposition(cm) {\n    setTimeout(function () {\n      var empty = false;\n      if (cm.lineCount() == 1) {\n        var input = cm.getInputField();\n        empty = input.nodeName == \"TEXTAREA\" ? !cm.getLine(0).length : !/[^\\u200b]/.test(input.querySelector(\".CodeMirror-line\").textContent);\n      }\n      if (empty) setPlaceholder(cm);else clearPlaceholder(cm);\n    }, 20);\n  }\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(),\n      empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n    if (empty) setPlaceholder(cm);else clearPlaceholder(cm);\n  }\n  function isEmpty(cm) {\n    return cm.lineCount() === 1 && cm.getLine(0) === \"\";\n  }\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","prev","Init","on","onBlur","onChange","getInputField","state","placeholderCompose","onComposition","off","clearPlaceholder","wrapper","getWrapperElement","className","replace","hasFocus","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","setTimeout","empty","lineCount","input","nodeName","getLine","length","test","querySelector","textContent","isEmpty"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/node_modules/codemirror/addon/display/placeholder.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      CodeMirror.on(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose = function() { onComposition(cm) })\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      CodeMirror.off(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose)\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder CodeMirror-line-like\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onComposition(cm) {\n    setTimeout(function() {\n      var empty = false\n      if (cm.lineCount() == 1) {\n        var input = cm.getInputField()\n        empty = input.nodeName == \"TEXTAREA\" ? !cm.getLine(0).length\n          : !/[^\\u200b]/.test(input.querySelector(\".CodeMirror-line\").textContent)\n      }\n      if (empty) setPlaceholder(cm)\n      else clearPlaceholder(cm)\n    }, 20)\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}