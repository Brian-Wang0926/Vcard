{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/github.css\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostComponent = ({\n  boards,\n  currentUser\n}) => {\n  _s();\n  const mdParser = new MarkdownIt({\n    breaks: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          const highlighted = hljs.highlight(str, {\n            language: lang,\n            ignoreIllegals: true\n          });\n          return '<pre class=\"hljs\"><code>' + highlighted.value + \"</code></pre>\";\n        } catch (__) {}\n      }\n      return '<pre class=\"hljs\"><code>' + mdParser.utils.escapeHtml(str) + \"</code></pre>\";\n    }\n  });\n  const [content, setContent] = useState(localStorage.getItem(\"content\") || \"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(\"\");\n  useEffect(() => {\n    const contentFromStorage = localStorage.getItem(\"content\");\n    if (contentFromStorage) {\n      setContent(contentFromStorage);\n    }\n  }, []);\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    setContent(text);\n    localStorage.setItem(\"content\", text);\n  };\n\n  // 上傳到編輯區\n  const handleImageUpload = file => {\n    return new Promise((resolve, reject) => {\n      const blobUrl = URL.createObjectURL(file);\n      console.log(\"Uploading file:\", file); // 打印文件对象\n      setUploadedImages(prevUploadedImages => [...prevUploadedImages, {\n        blobUrl,\n        file\n      }]);\n      resolve(blobUrl); // 解析 Promise 与 blob URL\n    });\n  };\n\n  // 送出提交\n  const uploadImageToS3 = async file => {\n    try {\n      console.log(\"前端上傳到s3\", file);\n      console.log(\"Uploading to S3, file type:\", file.type, \"size:\", file.size);\n      const response = await fetch(`/api/article/get-presigned-url?fileName=${encodeURIComponent(file.name)}&fileType=${file.type}`);\n      if (!response.ok) {\n        throw new Error(\"Unable to get presigned URL\");\n      }\n      const {\n        url: presignedUrl\n      } = await response.json();\n      console.log(\"预签名 URL\", presignedUrl);\n      await fetch(presignedUrl, {\n        method: \"PUT\",\n        body: file,\n        headers: {\n          \"Content-Type\": file.type\n        }\n      });\n\n      // 构造并返回 CloudFront URL\n      const cloudFrontUrl = `${process.env.REACT_APP_CLOUDFRONT_URL}/${file.name}`;\n      console.log(\"CloudFront URL\", cloudFrontUrl);\n      return cloudFrontUrl;\n    } catch (error) {\n      console.error(\"Error uploading image to S3:\", error);\n      return \"\";\n    }\n  };\n\n  // 提交文章\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 验证第一行是否为标题\n    const lines = content.split(\"\\n\");\n    if (!lines[0].startsWith(\"# \")) {\n      alert('文章的第一行必須是標题（以 \" # 加空格 \"開頭）');\n      return;\n    }\n\n    // 提取标题（假设第一行是标题）\n    const title = lines[0].substring(2).trim();\n    let updatedContent = content;\n    console.log(\"前端\", uploadedImages);\n    // 用于存储需要上传到 S3 的图片\n    const imagesToUpload = uploadedImages.filter(image => image.blobUrl.startsWith(\"blob:\"));\n    console.log(\"前端\", imagesToUpload);\n    for (const image of imagesToUpload) {\n      console.log(\"前端image\", image);\n      if (image.file) {\n        const s3Url = await uploadImageToS3(image.file); // 上传图片并返回 S3 URL\n        console.log(\"前端s3Url\", s3Url);\n        updatedContent = updatedContent.replace(image.blobUrl, s3Url);\n      } else {\n        console.error(\"File object is missing\");\n      }\n    }\n    const articleData = {\n      board: selectedBoard,\n      content: updatedContent,\n      title: title,\n      author: currentUser.id\n    };\n    console.log(\"Article Data: \", articleData);\n    // 发送 POST 请求到后端\n    try {\n      const response = await fetch(\"/api/article\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(articleData)\n      });\n      if (!response.ok) {\n        throw new Error(\"文章上传失败\");\n      }\n      const data = await response.json();\n      console.log(\"文章保存成功:\", data);\n      setContent('');\n    } catch (error) {\n      console.error(\"文章保存错误:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prose post-editor-component max-w-screen-xl mx-auto mt-4 pt-14\",\n    children: [/*#__PURE__*/_jsxDEV(MdEditor, {\n      value: content,\n      renderHTML: text => mdParser.render(text),\n      onChange: handleEditorChange,\n      onImageUpload: handleImageUpload,\n      config: {\n        view: {\n          menu: true,\n          md: true,\n          html: true,\n          fullScreen: false,\n          hideMenu: true\n        }\n      },\n      className: \"h-[40rem] overflow-y-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBoard,\n      onChange: e => setSelectedBoard(e.target.value),\n      className: \"m-2 border-spacing-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\u9078\\u64C7\\u4E00\\u500B\\u770B\\u677F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), boards.map(board => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: board._id,\n        children: board.name\n      }, board._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComponent, \"KbjSz38ECgEeE40xfV4YOBXkGY4=\");\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["React","useState","useEffect","MdEditor","MarkdownIt","hljs","jsxDEV","_jsxDEV","PostComponent","boards","currentUser","_s","mdParser","breaks","highlight","str","lang","getLanguage","highlighted","language","ignoreIllegals","value","__","utils","escapeHtml","content","setContent","localStorage","getItem","uploadedImages","setUploadedImages","selectedBoard","setSelectedBoard","contentFromStorage","handleEditorChange","html","text","setItem","handleImageUpload","file","Promise","resolve","reject","blobUrl","URL","createObjectURL","console","log","prevUploadedImages","uploadImageToS3","type","size","response","fetch","encodeURIComponent","name","ok","Error","url","presignedUrl","json","method","body","headers","cloudFrontUrl","process","env","REACT_APP_CLOUDFRONT_URL","error","handleSubmit","e","preventDefault","lines","split","startsWith","alert","title","substring","trim","updatedContent","imagesToUpload","filter","image","s3Url","replace","articleData","board","author","id","JSON","stringify","data","className","children","renderHTML","render","onChange","onImageUpload","config","view","menu","md","fullScreen","hideMenu","fileName","_jsxFileName","lineNumber","columnNumber","target","map","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/github.css\";\nimport \"react-markdown-editor-lite/lib/index.css\";\n\nconst PostComponent = ({ boards, currentUser }) => {\n  const mdParser = new MarkdownIt({\n    breaks: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          const highlighted = hljs.highlight(str, {\n            language: lang,\n            ignoreIllegals: true,\n          });\n          return (\n            '<pre class=\"hljs\"><code>' + highlighted.value + \"</code></pre>\"\n          );\n        } catch (__) {}\n      }\n      return (\n        '<pre class=\"hljs\"><code>' +\n        mdParser.utils.escapeHtml(str) +\n        \"</code></pre>\"\n      );\n    },\n  });\n  const [content, setContent] = useState(localStorage.getItem(\"content\") || \"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [selectedBoard, setSelectedBoard] = useState(\"\");\n\n  useEffect(() => {\n    const contentFromStorage = localStorage.getItem(\"content\");\n    if (contentFromStorage) {\n      setContent(contentFromStorage);\n    }\n  }, []);\n\n  const handleEditorChange = ({ html, text }) => {\n    setContent(text);\n    localStorage.setItem(\"content\", text);\n  };\n\n  // 上傳到編輯區\n  const handleImageUpload = (file) => {\n    return new Promise((resolve, reject) => {\n      const blobUrl = URL.createObjectURL(file);\n      console.log(\"Uploading file:\", file); // 打印文件对象\n      setUploadedImages((prevUploadedImages) => [\n        ...prevUploadedImages,\n        { blobUrl, file },\n      ]);\n      resolve(blobUrl); // 解析 Promise 与 blob URL\n    });\n  };\n\n  // 送出提交\n  const uploadImageToS3 = async (file) => {\n    try {\n      console.log(\"前端上傳到s3\", file);\n      console.log(\"Uploading to S3, file type:\", file.type, \"size:\", file.size);\n      const response = await fetch(\n        `/api/article/get-presigned-url?fileName=${encodeURIComponent(\n          file.name\n        )}&fileType=${file.type}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Unable to get presigned URL\");\n      }\n\n      const { url: presignedUrl } = await response.json();\n      console.log(\"预签名 URL\", presignedUrl);\n\n      await fetch(presignedUrl, {\n        method: \"PUT\",\n        body: file,\n        headers: {\n          \"Content-Type\": file.type,\n        },\n      });\n\n      // 构造并返回 CloudFront URL\n      const cloudFrontUrl = `${process.env.REACT_APP_CLOUDFRONT_URL}/${file.name}`;\n      console.log(\"CloudFront URL\", cloudFrontUrl);\n      return cloudFrontUrl;\n    } catch (error) {\n      console.error(\"Error uploading image to S3:\", error);\n      return \"\";\n    }\n  };\n\n  // 提交文章\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // 验证第一行是否为标题\n    const lines = content.split(\"\\n\");\n    if (!lines[0].startsWith(\"# \")) {\n      alert('文章的第一行必須是標题（以 \" # 加空格 \"開頭）');\n      return;\n    }\n\n    // 提取标题（假设第一行是标题）\n    const title = lines[0].substring(2).trim();\n\n    let updatedContent = content;\n\n    console.log(\"前端\", uploadedImages);\n    // 用于存储需要上传到 S3 的图片\n    const imagesToUpload = uploadedImages.filter((image) =>\n      image.blobUrl.startsWith(\"blob:\")\n    );\n    console.log(\"前端\", imagesToUpload);\n\n    for (const image of imagesToUpload) {\n      console.log(\"前端image\", image);\n      if (image.file) {\n        const s3Url = await uploadImageToS3(image.file); // 上传图片并返回 S3 URL\n        console.log(\"前端s3Url\", s3Url);\n        updatedContent = updatedContent.replace(image.blobUrl, s3Url);\n      } else {\n        console.error(\"File object is missing\");\n      }\n    }\n\n    const articleData = {\n      board: selectedBoard,\n      content: updatedContent,\n      title: title,\n      author: currentUser.id,\n    };\n\n    console.log(\"Article Data: \", articleData);\n    // 发送 POST 请求到后端\n    try {\n      const response = await fetch(\"/api/article\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(articleData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"文章上传失败\");\n      }\n\n      const data = await response.json();\n      console.log(\"文章保存成功:\", data);\n      setContent('');\n    } catch (error) {\n      console.error(\"文章保存错误:\", error);\n    }\n  };\n\n  return (\n    <div className=\"prose post-editor-component max-w-screen-xl mx-auto mt-4 pt-14\">\n      <MdEditor\n        value={content}\n        renderHTML={(text) => mdParser.render(text)}\n        onChange={handleEditorChange}\n        onImageUpload={handleImageUpload}\n        config={{\n          view: {\n            menu: true,\n            md: true,\n            html: true,\n            fullScreen: false,\n            hideMenu: true,\n          },\n        }}\n        className=\"h-[40rem] overflow-y-auto\"\n      />\n      <select\n        value={selectedBoard}\n        onChange={(e) => setSelectedBoard(e.target.value)}\n        className=\"m-2 border-spacing-0\"\n      >\n        <option value=\"\">選擇一個看板</option>\n        {boards.map((board) => (\n          <option key={board._id} value={board._id}>\n            {board.name}\n          </option>\n        ))}\n      </select>\n      <button\n        onClick={handleSubmit}\n        className=\"submit-button bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\"\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default PostComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}