{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport EasyMDE from \"easymde\";\nimport \"highlight.js/styles/github.css\";\nimport \"easymde/dist/easymde.min.css\";\nimport hljs from \"highlight.js\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhljs.configure({\n  // 可配置的高亮選項\n  languages: [\"javascript\", \"ruby\", \"python\", \"rust\"]\n});\n\n// Configure marked\nmarked.setOptions({\n  highlight: function (code) {\n    const highlighted = hljs.highlightAuto(code).value;\n    console.log(\"Highlighting:\", code); // Check if this gets logged with the expected code\n    console.log(\"Highlighted:\", highlighted); // Check the output\n    return highlighted;\n  },\n  breaks: true\n});\nconst PostComponent = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const easyMDEInstance = useRef(null);\n  const textareaRef = useRef(null);\n\n  // useMemo to only re-render the marked content when `content` changes\n  const renderedContent = useMemo(() => marked(content), [content]);\n\n  // Place this in your component for a one-time test\n  useEffect(() => {\n    const code = 'console.log(\"hello\");';\n    console.log(\"test:\", code);\n    const testElement = document.createElement(\"pre\");\n    testElement.innerHTML = `<code class=\"javascript\">${code}</code>`;\n    document.body.appendChild(testElement);\n    hljs.highlightElement(testElement.querySelector(\"code\"));\n  }, []);\n  useEffect(() => {\n    easyMDEInstance.current = new EasyMDE({\n      element: textareaRef.current,\n      autoDownloadFontAwesome: true,\n      initialValue: content,\n      toolbar: [\"undo\", \"redo\", \"|\", \"bold\", \"italic\", \"strikethrough\", \"heading\", \"heading-smaller\", \"heading-bigger\", \"|\", \"code\", \"quote\", \"unordered-list\", \"ordered-list\", \"|\", \"link\",\n      // \"image\",\n      \"upload-image\", \"table\", \"horizontal-rule\",\n      // {\n      //   name: \"custom\",\n      //   action: function customFunction(editor) {\n      //     // 自定义按钮的功能\n      //     console.log(\"Custom button clicked!\");\n      //   },\n      //   className: \"fa fa-star\",\n      //   title: \"Custom Button\",\n      // },\n      \"|\", \"preview\", \"side-by-side\", \"|\", \"guide\"\n      // 注意这里没有包含 'fullscreen' 按钮\n      ],\n\n      sideBySideFullscreen: false,\n      status: false,\n      syncSideBySidePreviewScroll: false,\n      renderingConfig: {\n        codeSyntaxHighlighting: true\n      },\n      previewRender: function (plainText) {\n        console.log(\"Rendering Preview:\", plainText);\n        const renderedHtml = marked(plainText);\n        console.log(\"Submitted Content:\", renderedHtml);\n        return renderedHtml;\n      }\n    });\n    easyMDEInstance.current.codemirror.on(\"change\", () => {\n      setContent(easyMDEInstance.current.value());\n      document.querySelectorAll(\"pre code\").forEach(block => {\n        hljs.highlightElement(block);\n      });\n    });\n    return () => easyMDEInstance.current.toTextArea();\n    setContent(testMarkdown);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // Apply highlighting whenever content updates\n    document.querySelectorAll(\"pre code\").forEach(block => {\n      hljs.highlightElement(block);\n    });\n  }, [content]);\n  useEffect(() => {\n    // ... (rest of your useEffect)\n\n    // Set the test markdown as initial content\n    setContent(testMarkdown);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prose max-w-screen-xl mx-auto mt-4 pt-14 hljs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-preview hljs\",\n        dangerouslySetInnerHTML: {\n          __html: renderedContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComponent, \"HsM+KNye3fQfFP2MyibwngEkyjw=\");\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","EasyMDE","hljs","marked","jsxDEV","_jsxDEV","configure","languages","setOptions","highlight","code","highlighted","highlightAuto","value","console","log","breaks","PostComponent","_s","content","setContent","easyMDEInstance","textareaRef","renderedContent","testElement","document","createElement","innerHTML","body","appendChild","highlightElement","querySelector","current","element","autoDownloadFontAwesome","initialValue","toolbar","sideBySideFullscreen","status","syncSideBySidePreviewScroll","renderingConfig","codeSyntaxHighlighting","previewRender","plainText","renderedHtml","codemirror","on","querySelectorAll","forEach","block","toTextArea","testMarkdown","handleSubmit","e","preventDefault","className","children","onSubmit","ref","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","type","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport EasyMDE from \"easymde\";\nimport \"highlight.js/styles/github.css\";\nimport \"easymde/dist/easymde.min.css\";\nimport hljs from \"highlight.js\";\nimport { marked } from \"marked\";\n\nhljs.configure({\n  // 可配置的高亮選項\n  languages: [\"javascript\", \"ruby\", \"python\", \"rust\"],\n});\n\n// Configure marked\nmarked.setOptions({\n  highlight: function (code) {\n    const highlighted = hljs.highlightAuto(code).value;\n    console.log(\"Highlighting:\", code); // Check if this gets logged with the expected code\n    console.log(\"Highlighted:\", highlighted); // Check the output\n    return highlighted;\n  },\n  breaks: true,\n});\n\nconst PostComponent = () => {\n  const [content, setContent] = useState(\"\");\n  const easyMDEInstance = useRef(null);\n  const textareaRef = useRef(null);\n\n  // useMemo to only re-render the marked content when `content` changes\n  const renderedContent = useMemo(() => marked(content), [content]);\n\n  // Place this in your component for a one-time test\n  useEffect(() => {\n    const code = 'console.log(\"hello\");';\n    console.log(\"test:\", code);\n    const testElement = document.createElement(\"pre\");\n    testElement.innerHTML = `<code class=\"javascript\">${code}</code>`;\n    document.body.appendChild(testElement);\n    hljs.highlightElement(testElement.querySelector(\"code\"));\n  }, []);\n\n  useEffect(() => {\n    easyMDEInstance.current = new EasyMDE({\n      element: textareaRef.current,\n      autoDownloadFontAwesome: true,\n      initialValue: content,\n      toolbar: [\n        \"undo\",\n        \"redo\",\n        \"|\",\n        \"bold\",\n        \"italic\",\n        \"strikethrough\",\n        \"heading\",\n        \"heading-smaller\",\n        \"heading-bigger\",\n        \"|\",\n        \"code\",\n        \"quote\",\n        \"unordered-list\",\n        \"ordered-list\",\n        \"|\",\n        \"link\",\n        // \"image\",\n        \"upload-image\",\n        \"table\",\n        \"horizontal-rule\",\n        // {\n        //   name: \"custom\",\n        //   action: function customFunction(editor) {\n        //     // 自定义按钮的功能\n        //     console.log(\"Custom button clicked!\");\n        //   },\n        //   className: \"fa fa-star\",\n        //   title: \"Custom Button\",\n        // },\n        \"|\",\n        \"preview\",\n        \"side-by-side\",\n\n        \"|\",\n        \"guide\",\n        // 注意这里没有包含 'fullscreen' 按钮\n      ],\n      sideBySideFullscreen: false,\n      status: false,\n      syncSideBySidePreviewScroll: false,\n      renderingConfig: {\n        codeSyntaxHighlighting: true,\n      },\n      previewRender: function (plainText) {\n        console.log(\"Rendering Preview:\", plainText);\n        const renderedHtml = marked(plainText);\n        console.log(\"Submitted Content:\", renderedHtml);\n        return renderedHtml;\n      },\n    });\n\n    easyMDEInstance.current.codemirror.on(\"change\", () => {\n      setContent(easyMDEInstance.current.value());\n\n      document.querySelectorAll(\"pre code\").forEach((block) => {\n        hljs.highlightElement(block);\n      });\n    });\n\n    return () => easyMDEInstance.current.toTextArea();\n\n    setContent(testMarkdown);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // Apply highlighting whenever content updates\n    document.querySelectorAll(\"pre code\").forEach((block) => {\n      hljs.highlightElement(block);\n    });\n  }, [content]);\n\n  useEffect(() => {\n    // ... (rest of your useEffect)\n\n    // Set the test markdown as initial content\n    setContent(testMarkdown);\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(content);\n  };\n\n  return (\n    <div className=\"prose max-w-screen-xl mx-auto mt-4 pt-14 hljs\">\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textareaRef}></textarea>\n        <div\n          className=\"markdown-preview hljs\"\n          dangerouslySetInnerHTML={{ __html: renderedContent }}\n        />\n        {/* This line is for testing purposes */}\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 text-white py-1 px-2 mt-5 rounded-lg\"\n        >\n          submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}