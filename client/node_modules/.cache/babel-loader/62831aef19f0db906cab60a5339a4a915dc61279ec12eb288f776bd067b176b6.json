{"ast":null,"code":"// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n  // Initialize\n  options = options || {};\n\n  // Verify\n  if (typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n    console.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n    return;\n  }\n\n  // Because some browsers don't support this functionality yet\n  if (!String.prototype.includes) {\n    String.prototype.includes = function () {\n      \"use strict\";\n\n      return String.prototype.indexOf.apply(this, arguments) !== -1;\n    };\n  }\n\n  // Define the new mode\n  options.codeMirrorInstance.defineMode(\"spell-checker\", function (config) {\n    // Load AFF/DIC data\n    if (!CodeMirrorSpellChecker.aff_loading) {\n      CodeMirrorSpellChecker.aff_loading = true;\n      var xhr_aff = new XMLHttpRequest();\n      xhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n      xhr_aff.onload = function () {\n        if (xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n          CodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n      xhr_aff.send(null);\n    }\n    if (!CodeMirrorSpellChecker.dic_loading) {\n      CodeMirrorSpellChecker.dic_loading = true;\n      var xhr_dic = new XMLHttpRequest();\n      xhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n      xhr_dic.onload = function () {\n        if (xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n          CodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n      xhr_dic.send(null);\n    }\n\n    // Define what separates a word\n    var rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n    // Create the overlay and such\n    var overlay = {\n      token: function (stream) {\n        var ch = stream.peek();\n        var word = \"\";\n        if (rx_word.includes(ch)) {\n          stream.next();\n          return null;\n        }\n        while ((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n          word += ch;\n          stream.next();\n        }\n        if (CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word)) return \"spell-error\"; // CSS class: cm-spell-error\n\n        return null;\n      }\n    };\n    var mode = options.codeMirrorInstance.getMode(config, config.backdrop || \"text/plain\");\n    return options.codeMirrorInstance.overlayMode(mode, overlay, true);\n  });\n}\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;","map":{"version":3,"names":["Typo","require","CodeMirrorSpellChecker","options","codeMirrorInstance","defineMode","console","log","String","prototype","includes","indexOf","apply","arguments","config","aff_loading","xhr_aff","XMLHttpRequest","open","onload","readyState","status","aff_data","responseText","num_loaded","typo","dic_data","platform","send","dic_loading","xhr_dic","rx_word","overlay","token","stream","ch","peek","word","next","check","mode","getMode","backdrop","overlayMode","module","exports"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/node_modules/codemirror-spell-checker/src/js/spell-checker.js"],"sourcesContent":["// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n\t// Initialize\n\toptions = options || {};\n\n\n\t// Verify\n\tif(typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n\t\tconsole.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n\t\treturn;\n\t}\n\n\n\t// Because some browsers don't support this functionality yet\n\tif(!String.prototype.includes) {\n\t\tString.prototype.includes = function() {\n\t\t\t\"use strict\";\n\t\t\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\n\t\t};\n\t}\n\n\n\t// Define the new mode\n\toptions.codeMirrorInstance.defineMode(\"spell-checker\", function(config) {\n\t\t// Load AFF/DIC data\n\t\tif(!CodeMirrorSpellChecker.aff_loading) {\n\t\t\tCodeMirrorSpellChecker.aff_loading = true;\n\t\t\tvar xhr_aff = new XMLHttpRequest();\n\t\t\txhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\t\t\txhr_aff.onload = function() {\n\t\t\t\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_aff.send(null);\n\t\t}\n\n\t\tif(!CodeMirrorSpellChecker.dic_loading) {\n\t\t\tCodeMirrorSpellChecker.dic_loading = true;\n\t\t\tvar xhr_dic = new XMLHttpRequest();\n\t\t\txhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\t\t\txhr_dic.onload = function() {\n\t\t\t\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_dic.send(null);\n\t\t}\n\n\n\t\t// Define what separates a word\n\t\tvar rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n\n\t\t// Create the overlay and such\n\t\tvar overlay = {\n\t\t\ttoken: function(stream) {\n\t\t\t\tvar ch = stream.peek();\n\t\t\t\tvar word = \"\";\n\n\t\t\t\tif(rx_word.includes(ch)) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n\t\t\t\t\tword += ch;\n\t\t\t\t\tstream.next();\n\t\t\t\t}\n\n\t\t\t\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\n\t\t\t\t\treturn \"spell-error\"; // CSS class: cm-spell-error\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tvar mode = options.codeMirrorInstance.getMode(\n\t\t\tconfig, config.backdrop || \"text/plain\"\n\t\t);\n\n\t\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\n\t});\n}\n\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;"],"mappings":"AAAA;AACA,YAAY;;AAGZ;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAG7B;AACA,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EACxC;EACAA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;EAGvB;EACA,IAAG,OAAOA,OAAO,CAACC,kBAAkB,KAAK,UAAU,IAAI,OAAOD,OAAO,CAACC,kBAAkB,CAACC,UAAU,KAAK,UAAU,EAAE;IACnHC,OAAO,CAACC,GAAG,CAAC,0GAA0G,CAAC;IACvH;EACD;;EAGA;EACA,IAAG,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,EAAE;IAC9BF,MAAM,CAACC,SAAS,CAACC,QAAQ,GAAG,YAAW;MACtC,YAAY;;MACZ,OAAOF,MAAM,CAACC,SAAS,CAACE,OAAO,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC;EACF;;EAGA;EACAV,OAAO,CAACC,kBAAkB,CAACC,UAAU,CAAC,eAAe,EAAE,UAASS,MAAM,EAAE;IACvE;IACA,IAAG,CAACZ,sBAAsB,CAACa,WAAW,EAAE;MACvCb,sBAAsB,CAACa,WAAW,GAAG,IAAI;MACzC,IAAIC,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;MAClCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAE,oEAAoE,EAAE,IAAI,CAAC;MAC/FF,OAAO,CAACG,MAAM,GAAG,YAAW;QAC3B,IAAGH,OAAO,CAACI,UAAU,KAAK,CAAC,IAAIJ,OAAO,CAACK,MAAM,KAAK,GAAG,EAAE;UACtDnB,sBAAsB,CAACoB,QAAQ,GAAGN,OAAO,CAACO,YAAY;UACtDrB,sBAAsB,CAACsB,UAAU,EAAE;UAEnC,IAAGtB,sBAAsB,CAACsB,UAAU,IAAI,CAAC,EAAE;YAC1CtB,sBAAsB,CAACuB,IAAI,GAAG,IAAIzB,IAAI,CAAC,OAAO,EAAEE,sBAAsB,CAACoB,QAAQ,EAAEpB,sBAAsB,CAACwB,QAAQ,EAAE;cACjHC,QAAQ,EAAE;YACX,CAAC,CAAC;UACH;QACD;MACD,CAAC;MACDX,OAAO,CAACY,IAAI,CAAC,IAAI,CAAC;IACnB;IAEA,IAAG,CAAC1B,sBAAsB,CAAC2B,WAAW,EAAE;MACvC3B,sBAAsB,CAAC2B,WAAW,GAAG,IAAI;MACzC,IAAIC,OAAO,GAAG,IAAIb,cAAc,CAAC,CAAC;MAClCa,OAAO,CAACZ,IAAI,CAAC,KAAK,EAAE,oEAAoE,EAAE,IAAI,CAAC;MAC/FY,OAAO,CAACX,MAAM,GAAG,YAAW;QAC3B,IAAGW,OAAO,CAACV,UAAU,KAAK,CAAC,IAAIU,OAAO,CAACT,MAAM,KAAK,GAAG,EAAE;UACtDnB,sBAAsB,CAACwB,QAAQ,GAAGI,OAAO,CAACP,YAAY;UACtDrB,sBAAsB,CAACsB,UAAU,EAAE;UAEnC,IAAGtB,sBAAsB,CAACsB,UAAU,IAAI,CAAC,EAAE;YAC1CtB,sBAAsB,CAACuB,IAAI,GAAG,IAAIzB,IAAI,CAAC,OAAO,EAAEE,sBAAsB,CAACoB,QAAQ,EAAEpB,sBAAsB,CAACwB,QAAQ,EAAE;cACjHC,QAAQ,EAAE;YACX,CAAC,CAAC;UACH;QACD;MACD,CAAC;MACDG,OAAO,CAACF,IAAI,CAAC,IAAI,CAAC;IACnB;;IAGA;IACA,IAAIG,OAAO,GAAG,oCAAoC;;IAGlD;IACA,IAAIC,OAAO,GAAG;MACbC,KAAK,EAAE,SAAAA,CAASC,MAAM,EAAE;QACvB,IAAIC,EAAE,GAAGD,MAAM,CAACE,IAAI,CAAC,CAAC;QACtB,IAAIC,IAAI,GAAG,EAAE;QAEb,IAAGN,OAAO,CAACrB,QAAQ,CAACyB,EAAE,CAAC,EAAE;UACxBD,MAAM,CAACI,IAAI,CAAC,CAAC;UACb,OAAO,IAAI;QACZ;QAEA,OAAM,CAACH,EAAE,GAAGD,MAAM,CAACE,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAACL,OAAO,CAACrB,QAAQ,CAACyB,EAAE,CAAC,EAAE;UAC5DE,IAAI,IAAIF,EAAE;UACVD,MAAM,CAACI,IAAI,CAAC,CAAC;QACd;QAEA,IAAGpC,sBAAsB,CAACuB,IAAI,IAAI,CAACvB,sBAAsB,CAACuB,IAAI,CAACc,KAAK,CAACF,IAAI,CAAC,EACzE,OAAO,aAAa,CAAC,CAAC;;QAEvB,OAAO,IAAI;MACZ;IACD,CAAC;IAED,IAAIG,IAAI,GAAGrC,OAAO,CAACC,kBAAkB,CAACqC,OAAO,CAC5C3B,MAAM,EAAEA,MAAM,CAAC4B,QAAQ,IAAI,YAC5B,CAAC;IAED,OAAOvC,OAAO,CAACC,kBAAkB,CAACuC,WAAW,CAACH,IAAI,EAAER,OAAO,EAAE,IAAI,CAAC;EACnE,CAAC,CAAC;AACH;;AAGA;AACA9B,sBAAsB,CAACsB,UAAU,GAAG,CAAC;AACrCtB,sBAAsB,CAACa,WAAW,GAAG,KAAK;AAC1Cb,sBAAsB,CAAC2B,WAAW,GAAG,KAAK;AAC1C3B,sBAAsB,CAACoB,QAAQ,GAAG,EAAE;AACpCpB,sBAAsB,CAACwB,QAAQ,GAAG,EAAE;AACpCxB,sBAAsB,CAACuB,IAAI;;AAG3B;AACAmB,MAAM,CAACC,OAAO,GAAG3C,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}