{"ast":null,"code":"var _jsxFileName = \"/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactMarkdownEditorLite from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostComponent = () => {\n  _s();\n  const mdParser = new MarkdownIt();\n  const [content, setContent] = useState(\"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const handleImageUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      // TODO: 上传到S3，并获取URL\n      const blobUrl = URL.createObjectURL(file);\n      // 假设我们有一个函数 uploadToS3 上传到S3并返回URL\n      // const imageUrl = await uploadToS3(file);\n      // 使用真实的imageUrl而不是blobUrl\n      setUploadedImages([...uploadedImages, blobUrl]); // 保存上传的图像以便稍后处理\n      callback(blobUrl);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    // 更新内容状态\n    setContent(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" max-w-screen-xl mx-auto mt-4 pt-14 \",\n    children: [/*#__PURE__*/_jsxDEV(ReactMarkdownEditorLite, {\n      value: content,\n      renderHTML: text => mdParser.render(text),\n      onChange: handleEditorChange,\n      onImageUpload: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Submit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComponent, \"YzW5/K/3d438c0a8VOzl2SVMx20=\");\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["React","useState","useRef","ReactMarkdownEditorLite","MarkdownIt","jsxDEV","_jsxDEV","PostComponent","_s","mdParser","content","setContent","uploadedImages","setUploadedImages","handleImageUpload","file","callback","reader","FileReader","onload","blobUrl","URL","createObjectURL","readAsDataURL","handleEditorChange","html","text","className","children","value","renderHTML","render","onChange","onImageUpload","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleSubmit","_c","$RefreshReg$"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/src/components/post-component.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport ReactMarkdownEditorLite from \"react-markdown-editor-lite\";\nimport MarkdownIt from \"markdown-it\";\nimport \"react-markdown-editor-lite/lib/index.css\";\n\nconst PostComponent = () => {\n  const mdParser = new MarkdownIt();\n  const [content, setContent] = useState(\"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  const handleImageUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      // TODO: 上传到S3，并获取URL\n      const blobUrl = URL.createObjectURL(file);\n      // 假设我们有一个函数 uploadToS3 上传到S3并返回URL\n      // const imageUrl = await uploadToS3(file);\n      // 使用真实的imageUrl而不是blobUrl\n      setUploadedImages([...uploadedImages, blobUrl]); // 保存上传的图像以便稍后处理\n      callback(blobUrl);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleEditorChange = ({ html, text }) => {\n    // 更新内容状态\n    setContent(text);\n  };\n\n  return (\n    <div className=\" max-w-screen-xl mx-auto mt-4 pt-14 \">\n      <ReactMarkdownEditorLite\n        value={content}\n        renderHTML={(text) => mdParser.render(text)}\n        onChange={handleEditorChange}\n        onImageUpload={handleImageUpload}\n      />\n      <button onClick={handleSubmit} className=\"submit-button\">\n        Submit Post\n      </button>\n    </div>\n  );\n};\n\nexport default PostComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,uBAAuB,MAAM,4BAA4B;AAChE,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAG,IAAIL,UAAU,CAAC,CAAC;EACjC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMa,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC5C,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpB;MACA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;MACzC;MACA;MACA;MACAF,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEQ,OAAO,CAAC,CAAC,CAAC,CAAC;MACjDJ,QAAQ,CAACI,OAAO,CAAC;IACnB,CAAC;IACDH,MAAM,CAACM,aAAa,CAACR,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMS,kBAAkB,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IAC7C;IACAf,UAAU,CAACe,IAAI,CAAC;EAClB,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,sCAAsC;IAAAC,QAAA,gBACnDtB,OAAA,CAACH,uBAAuB;MACtB0B,KAAK,EAAEnB,OAAQ;MACfoB,UAAU,EAAGJ,IAAI,IAAKjB,QAAQ,CAACsB,MAAM,CAACL,IAAI,CAAE;MAC5CM,QAAQ,EAAER,kBAAmB;MAC7BS,aAAa,EAAEnB;IAAkB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACF/B,OAAA;MAAQgC,OAAO,EAAEC,YAAa;MAACZ,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAEzD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArCID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}