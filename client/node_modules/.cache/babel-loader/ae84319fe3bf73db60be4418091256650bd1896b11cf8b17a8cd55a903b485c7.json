{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function () {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function (state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function (stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n        stream.pos = Math.min(state.basePos, state.overlayPos);\n\n        // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function (state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function (state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken"],"sources":["/Users/wangbaiyuan/Documents/Wehelp/Part3/Vcard/client/node_modules/codemirror/addon/mode/overlay.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}